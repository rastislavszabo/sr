/**
 * @file sr_constants.h
 * @author Rastislav Szabo <raszabo@cisco.com>, Lukas Macko <lmacko@cisco.com>
 * @brief Common sysrepo constants.
 *
 * @copyright
 * Copyright 2016 Cisco Systems, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef SRC_SR_CONSTANTS_H_IN_
#define SRC_SR_CONSTANTS_H_IN_

/** Current version of sysrepo. */
#define SR_VERSION "@SYSREPO_VERSION@"

/* Portability feature-check macros. */
#cmakedefine HAVE_PTHREAD_RWLOCKATTR_SETKIND_NP
#cmakedefine HAVE_GETPEEREID
#cmakedefine HAVE_GETPEERUCRED
#cmakedefine HAVE_UCRED_H
#cmakedefine HAVE_SETFSUID
#cmakedefine HAVE_STAT_ST_MTIM
#cmakedefine HAVE_TIMED_LOCK
#cmakedefine HAVE_FSETXATTR

/** Use libavl (if defined) or libredblack (if not defined) for binary tree manipulations. */
#cmakedefine USE_AVL_LIB

/** Enable NETCONF Access Control Model (RFC 6536). */
#cmakedefine ENABLE_NACM

/** UID to be used to identify NACM recovery session, default value is 0. */
#define SR_NACM_RECOVERY_UID @NACM_RECOVERY_UID@

/** Use Sysrepo's own memory management. */
#cmakedefine USE_SR_MEM_MGMT

/** Enable event notifications store. */
#cmakedefine ENABLE_NOTIF_STORE

/** Controls whether thread IDs should be printed. */
#cmakedefine LOG_THREAD_ID

/** Generate config-change notifications (RFC 6470). */
#cmakedefine ENABLE_CONFIG_CHANGE_NOTIF

/** Save config-change notifications (RFC 6470) in the notification store (slows down the commit process). */
#cmakedefine STORE_CONFIG_CHANGE_NOTIF

/** Path to the directory with schemas. */
#define SR_SCHEMA_SEARCH_DIR "@SCHEMA_SEARCH_DIR@"

/** Path to the directory with data files. */
#define SR_DATA_SEARCH_DIR "@DATA_SEARCH_DIR@"

/** Path to the directory with internal schemas. */
#define SR_INTERNAL_SCHEMA_SEARCH_DIR "@INTERNAL_SCHEMA_SEARCH_DIR@"

/** Path to the directory with internal data files. */
#define SR_INTERNAL_DATA_SEARCH_DIR "@INTERNAL_DATA_SEARCH_DIR@"

/** Path to the directory with notification store data files. */
#define SR_NOTIF_DATA_SEARCH_DIR "@NOTIF_DATA_SEARCH_DIR@"

/** Path to the directory with sysrepo plugins. */
#define SR_PLUGINS_DIR "@PLUGINS_DIR@"

/** File extension of data files for startup datastore. */
#define SR_STARTUP_FILE_EXT ".startup"

/** File extension of data files for running datastore. */
#define SR_RUNNING_FILE_EXT ".running"

/** File extension of data files for candidate datastore */
#define SR_CANDIDATE_FILE_EXT ".candidate"

/** File extension of data lock files */
#define SR_LOCK_FILE_EXT ".lock"

/** File extension of persistent data files. */
#define SR_PERSIST_FILE_EXT ".persist"

/** File extension of YANG schema files. */
#define SR_SCHEMA_YANG_FILE_EXT ".yang"

/** File extension of YIN schema files. */
#define SR_SCHEMA_YIN_FILE_EXT ".yin"

/** Sysrepo daemon PID file. */
#define SR_DAEMON_PID_FILE "@DAEMON_PID_FILE@"

/** Sysrepo plugin daemon PID file. */
#define SR_PLUGIN_DAEMON_PID_FILE "@PLUGIN_DAEMON_PID_FILE@"

/** Sysrepo daemon server socket. */
#define SR_DAEMON_SOCKET "@DAEMON_SOCKET@"

/** Sysrepo daemon working directory. */
#define SR_DEAMON_WORK_DIR "/"

/** Sysrepo daemon log level <0 - 4>. */
#define SR_DAEMON_LOG_LEVEL 2

/** Sysrepo daemon initialization timeout (in seconds). */
#define SR_DAEMON_INIT_TIMEOUT 10

/** Sysrepo subscriptions socket directory. */
#define SR_SUBSCRIPTIONS_SOCKET_DIR "@SUBSCRIPTIONS_SOCKET_DIR@"

/** Directory local to SR_SUBSCRIPTIONS_SOCKET_DIR containing sysrepo-global subscription sockets. */
#define SR_GLOBAL_SUBSCRIPTIONS_SUBDIR "_global-subscriptions"

/** Maximum size of a GPB message. */
#define SR_MAX_MSG_SIZE ((SIZE_MAX < UINT32_MAX) ? SIZE_MAX : UINT32_MAX)

/** Size of the preamble sent before each sysrepo GPB message. */
#define SR_MSG_PREAM_SIZE sizeof(uint32_t)

/** Strerror buffer length */
#define SR_MAX_STRERROR_LEN 200

/** Plugin initialization retry timeout (in seconds). */
#define SR_PLUGIN_INIT_RETRY_TIMEOUT 10

/** Plugin health check timeout (in seconds). */
#define SR_PLUGIN_HEALTH_CHECK_TIMEOUT 10

/** Timeout (in seconds) for standard Sysrepo API requests. */
#define SR_REQUEST_TIMEOUT @REQUEST_TIMEOUT@

/** Timeout (in seconds) for Sysrepo API requests that can take longer than standard requests (commit, copy-config, rpc, action). */
#define SR_LONG_REQUEST_TIMEOUT @LONG_REQUEST_TIMEOUT@

/** Timeout (in seconds) that a commit request can wait for answer from commit verifiers and change notification subscribers. */
#define SR_COMMIT_VERIFY_TIMEOUT @COMMIT_VERIFY_TIMEOUT@

/** Timeout (in seconds) that a request can wait for operational data from data providers. */
#define SR_OPER_DATA_PROVIDE_TIMEOUT @OPER_DATA_PROVIDE_TIMEOUT@

/** Timeout (in minutes) after which stored notifications will be aged out and erased from notification store. */
#define SR_NOTIF_AGE_TIMEOUT @NOTIF_AGE_TIMEOUT@

/** Time window (in minutes) for notifications to be grouped into one data file (larger window produces larger data files). */
#define SR_NOTIF_TIME_WINDOW @NOTIF_TIME_WINDOW@

#endif /* SRC_SR_CONSTANTS_H_IN_ */
